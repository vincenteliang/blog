(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{390:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"计算机网络相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络相关"}},[t._v("#")]),t._v(" 计算机网络相关")]),t._v(" "),a("h3",{attrs:{id:"状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态码"}},[t._v("#")]),t._v(" 状态码")]),t._v(" "),a("p",[a("strong",[t._v("301 moved permanently：永久性重定向")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Location'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost:3000/redirect'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/redirect'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当我们多次访问"),a("code",[t._v("/login")]),t._v(",会输出")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("第一次")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("Request URL: http://localhost:3000/login\nRequest Method: GET\nStatus Code: 301 Moved Permanently\n")])])]),a("p",[t._v("第二次")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("Request URL: http://localhost:3000/login\nRequest Method: GET\nStatus Code: 301 Moved Permanently (from disk cache)\n")])])]),a("p",[a("strong",[t._v("302 found：临时性重定向")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("302")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Location'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost:3000/redirect'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/redirect'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当我们多次访问"),a("code",[t._v("/login")]),t._v(",会输出")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("多次访问的HTTP报文如下。")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[t._v("Request URL: http://localhost:3000/ddd\nRequest Method: GET\nStatus Code: 302 Found\n")])])]),a("p",[a("strong",[t._v("304 Not Modidied：用于浏览器缓存。")])]),t._v(" "),a("h3",{attrs:{id:"http请求方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http请求方法"}},[t._v("#")]),t._v(" HTTP请求方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Get")]),t._v(" "),a("td",[t._v("通常用于请求资源")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Post")]),t._v(" "),a("td",[t._v("通常用于向服务端发送资源")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Delete")]),t._v(" "),a("td",[t._v("通常用于删除资源")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Put")]),t._v(" "),a("td",[t._v("通常用于资源的更新，若资源不存在则新建一个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Option")]),t._v(" "),a("td",[t._v("通常用于CORS的请求预检")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Head")]),t._v(" "),a("td",[t._v("只请求资源的头部，该请求方法的一个使用场景是在下载一个大文件前先获取其大小再决定是否要下载, 以此可以节约带宽资源")])])])]),t._v(" "),a("h5",{attrs:{id:"get-post的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-post的区别"}},[t._v("#")]),t._v(" Get/Post的区别")]),t._v(" "),a("ul",[a("li",[t._v("Get请求的参数放在URL里，Post请求的参数放在实体里。")]),t._v(" "),a("li",[t._v("Get请求比起Post请求更加不安全，因为参数放在URL中，不能用来传递敏感信息。")]),t._v(" "),a("li",[t._v("Get请求的参数放在URL中，所以有长度限制；而Post请求没有限制。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/25028045",target:"_blank",rel:"noopener noreferrer"}},[t._v("更多区别"),a("OutboundLink")],1)]),t._v(" "),a("h5",{attrs:{id:"restful-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restful-api"}},[t._v("#")]),t._v(" RESTful API")]),t._v(" "),a("p",[t._v("应该尽量将API部署在专用域名之下。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("https"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n")])])]),a("p",[t._v("如果确定API很简单，不会有进一步扩展，可以考虑放在主域名下。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("https"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),a("p",[t._v("在RESTful架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词。")]),t._v(" "),a("p",[t._v("对于资源的具体操作类型，由HTTP动词表示。")]),t._v(" "),a("p",[t._v("如Get, Post, Put, Delete等")]),t._v(" "),a("h3",{attrs:{id:"http头部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http头部"}},[t._v("#")]),t._v(" HTTP头部")]),t._v(" "),a("p",[t._v("一些常用的请求/响应/通用头部")]),t._v(" "),a("h5",{attrs:{id:"请求头部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求头部"}},[t._v("#")]),t._v(" 请求头部")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("cookie:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("host:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("If-None-Match:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("If-Modified-Since:")]),t._v(" ''\n")])])]),a("h6",{attrs:{id:"host-与-虚拟主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host-与-虚拟主机"}},[t._v("#")]),t._v(" host 与 虚拟主机")]),t._v(" "),a("p",[t._v("host字段是HTTP1.1新增的头部，主要用来实现虚拟主机")]),t._v(" "),a("p",[t._v("一台物理主机上当然可以在不同端口上部署多个服务端。一台主机也可以给多个不同的域名以供访问。")]),t._v(" "),a("p",[t._v("那么可以通过nginx来实现虚拟主机，配置类似如下。")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以在这进行代理")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bbb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("无论是"),a("code",[t._v("www.aaa.com")]),t._v("还是"),a("code",[t._v("www.bbb.com")]),t._v("，都能访问我们的服务器。")]),t._v(" "),a("p",[t._v("根据域名/host的不同，代理向不同的服务端。")]),t._v(" "),a("h5",{attrs:{id:"响应头部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应头部"}},[t._v("#")]),t._v(" 响应头部")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Location:")]),t._v(" '/'\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("ETag:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Last-Modified:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cache-Control:")]),t._v(" 'max-age='\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("expires:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("access-control-allow-origin:")]),t._v(" '*'\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("access-control-allow-credentials:")]),t._v(" true\n")])])]),a("h5",{attrs:{id:"通用头部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用头部"}},[t._v("#")]),t._v(" 通用头部")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("accept:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("accept-language:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("content-Type:")]),t._v(" ''\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("content-length:")]),t._v(" ''\n")])])]),a("h3",{attrs:{id:"http协议1-0-1-1和2-0的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议1-0-1-1和2-0的区别"}},[t._v("#")]),t._v(" HTTP协议1.0，1.1和2.0的区别")]),t._v(" "),a("h5",{attrs:{id:"http1-1比起1-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http1-1比起1-0"}},[t._v("#")]),t._v(" HTTP1.1比起1.0")]),t._v(" "),a("ol",[a("li",[t._v("HTTP1.0默认不开启长连接，HTTP1.1默认开启（Connection：Keep-Alive），并且支持管线化（Pipeline）。")]),t._v(" "),a("li",[t._v("HTTP1.0不支持Host头部，HTTP1.1支持，可以实现虚拟主机。")]),t._v(" "),a("li",[t._v("HTTP1.1比1.0新加了E-tag，If-Node-Match，Cache-control等用于缓存控制的头部。")]),t._v(" "),a("li",[t._v("HTTP1.1新增24个错误状态响应码，如409（Conflict）表示请求的资源与资源的当前状态发生冲突。")]),t._v(" "),a("li",[t._v("HTTP1.1对带宽进行优化。")])]),t._v(" "),a("h5",{attrs:{id:"http2-0比起1-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http2-0比起1-1"}},[t._v("#")]),t._v(" HTTP2.0比起1.1")]),t._v(" "),a("ol",[a("li",[t._v("HTTP2.0采用的二进制格式传输，取代了HTTP1.x的文本格式的传输。")]),t._v(" "),a("li",[t._v("多路复用。在HTTP2.0中有两个概念，分别是帧（frame）和流（stream），帧表示最小的单位，每个帧都会标识出该帧属于哪个流。多路复用指的是一个TCP连接中可以存在多个流，也就是说，同一时间可以发送多个请求。")]),t._v(" "),a("li",[t._v("头部压缩。对报文的头部进行压缩，在客户端和服务端都维护着一份字典记录着头部对应的索引。")]),t._v(" "),a("li",[t._v("服务端推送（Server Push）。服务端可以预测客户端需要的资源，并主动推送给客户端。")])]),t._v(" "),a("h3",{attrs:{id:"https的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https的原理"}},[t._v("#")]),t._v(" HTTPS的原理")]),t._v(" "),a("p",[t._v("HTTP = HTTP + TLS/SSL")]),t._v(" "),a("p",[t._v("发送HTTPS请求时")]),t._v(" "),a("ol",[a("li",[t._v("生成HTTP报文，交给TLS处理，进行TLS握手；交换互相的随机数，支持的加密算法，压缩算法，协议版本号。")]),t._v(" "),a("li",[t._v("服务端发送证书给客户端，证书包括服务端的公钥和CA的私钥对服务端公钥的签名。客户端用CA的公钥对签名进行验证。")]),t._v(" "),a("li",[t._v("验证成功后，客户端生成预备主密码，用服务端公钥加密后发送给服务端。服务端接收到预备主密码后，结合两个随机数生成主密码。")]),t._v(" "),a("li",[t._v("主密码用来生成会话使用的密钥，消息认证码使用的密钥，CBC模式要用到的初始向量。")]),t._v(" "),a("li",[t._v("报文分割后，压缩，加上MAC后进行加密传输。")])]),t._v(" "),a("h5",{attrs:{id:"中间人攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击"}},[t._v("#")]),t._v(" 中间人攻击")]),t._v(" "),a("p",[t._v("客户端 <=> 中间人 <=> 服务端")]),t._v(" "),a("ol",[a("li",[t._v("服务端向客户端发送公钥，被中间人获取，中间人把自己的公钥给客户端。")]),t._v(" "),a("li",[t._v("客户端用中间人的公钥加密数据发送对称密钥，中间人用自己的私钥解密，再用服务端的公钥加密发送，服务端用自己的私钥解密。")]),t._v(" "),a("li",[t._v("接下来客户端和服务端用对称密钥通信，然而这个密钥中间人也知道，因此能知道密文对应的明文。")])]),t._v(" "),a("p",[t._v("中间人攻击是因为服务端发送过来的公钥无法验证是不是真实的公钥，还是伪造的公钥。因此用CA签名的证书（公钥+签名）即可。")]),t._v(" "),a("h3",{attrs:{id:"tcp三次握手和四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp三次握手和四次挥手"}},[t._v("#")]),t._v(" TCP三次握手和四次挥手")]),t._v(" "),a("h5",{attrs:{id:"三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Client给Server发送报文，Server知道自己能接收到Client发送的报文")]),t._v(" "),a("p",[t._v("该报文的SYN = 1， seq = x")])]),t._v(" "),a("li",[a("p",[t._v("Server给Client发送报文，Client知道自己能接收Server发送的报文，知道自己发送的报文能被Server接收")]),t._v(" "),a("p",[t._v("该报文的SYN = 1, ACK = 1，确认号 = x + 1， seq = y")])]),t._v(" "),a("li",[a("p",[t._v("Client给Server发送报文，Server知道自己发送的报文能被Client接收。")]),t._v(" "),a("p",[t._v("该报文的ACK = 1，确认号 = y + 1")])])]),t._v(" "),a("p",[t._v("经过三次握手，客户端（Client）和服务端（Server）都知道自己发送的报文能被对方接收，也知道自己能接收到对方的报文。")]),t._v(" "),a("p",[t._v("注：SYN / ACK / FIN 为TCP报文头部的一个标识。seq为报文的序列号（Sequence number），ack为报文的确认序号（并不是之前那个标识，而是Acknowledgement Number）。")]),t._v(" "),a("p",[t._v("SYN = 1，seq = x 对应的是 ACK = 1，ack = x + 1")]),t._v(" "),a("h6",{attrs:{id:"为什么不两次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么不两次握手"}},[t._v("#")]),t._v(" 为什么不两次握手")]),t._v(" "),a("blockquote",[a("p",[t._v("主要是为了防止已经失效的连接请求报文突然又传送到了服务器，从而产生错误。")])]),t._v(" "),a("p",[t._v("假设有这样一种场景, 客户端发送的第一个请求连接并且没有丢失，但是被滞留的时间太长。由于TCP的客户端迟迟没有收到确认报文，以为服务器没有收到，此时重新向服务器发送报文。 而现在第一个请求到达服务端，这个请求已经报废了，但是又会建立连接。")]),t._v(" "),a("p",[t._v("如果采用的是三次握手，就算是那一次失效的报文传送过来了，服务端接受到了那条失效报文并且回复了确认报文，但是客户端不会再次发出确认。由于服务器收不到确认，就知道客户端并没有请求连接。")]),t._v(" "),a("h6",{attrs:{id:"为什么不四次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么不四次握手"}},[t._v("#")]),t._v(" 为什么不四次握手")]),t._v(" "),a("p",[t._v("既然三次就可以了，多一次就是浪费资源了。")]),t._v(" "),a("h5",{attrs:{id:"四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[t._v("#")]),t._v(" 四次挥手")]),t._v(" "),a("p",[t._v("TCP 是全双工的，在断开连接时两端都需要发送 FIN 和 ACK。")]),t._v(" "),a("ul",[a("li",[t._v("第一次挥手\n"),a("ul",[a("li",[t._v("若客户端 A 认为数据发送完成，则它需要向服务端 B 发送连接释放请求。")])])]),t._v(" "),a("li",[t._v("第二次挥手\n"),a("ul",[a("li",[t._v("B 收到连接释放请求后，会告诉应用层要释放 TCP 链接。然后会发送 ACK 包，并进入 "),a("strong",[t._v("CLOSE_WAIT")]),t._v(" 状态，表示 A 到 B 的连接已经释放，不接收 A 发的数据了。但是因为 "),a("strong",[t._v("TCP 连接时双向的")]),t._v("，所以 B 仍旧可以发送数据给 A。")])])]),t._v(" "),a("li",[t._v("第三次挥手\n"),a("ul",[a("li",[t._v("B 如果此时还有没发完的数据会继续发送，完毕后会向 A 发送连接释放请求，然后 B 便进入"),a("strong",[t._v("LAST-ACK")]),t._v("状态。")]),t._v(" "),a("li",[t._v("PS：通过延迟确认的技术（通常有时间限制，否则对方会误认为需要重传），可以将第二次和第三次握手合并，延迟 ACK 包的发送。")])])]),t._v(" "),a("li",[t._v("第四次挥手\n"),a("ul",[a("li",[t._v("A 收到释放请求后，向 B 发送确认应答，此时 A 进入 "),a("strong",[t._v("TIME-WAIT")]),t._v(" 状态。该状态会持续 2MSL（最大段生存期，指报文段在网络中生存的时间，超时会被抛弃） 时间，若该时间段内没有 B 的重发请求的话，就进入 "),a("strong",[t._v("CLOSED")]),t._v(" 状态。当 B 收到确认应答后，也便进入 CLOSED 状态。")])])])]),t._v(" "),a("p",[t._v("个人理解：由于在客户端要关闭TCP连接的时候，服务端可能还在发送数据；所以服务端先进行第二次挥手，这个报文的作用是服务端不再接收数据；当服务端的数据全部发送过去后，再一次挥手，这样服务端就不再发送数据了；至此，TCP连接就关闭了。")]),t._v(" "),a("h5",{attrs:{id:"time-wait"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time-wait"}},[t._v("#")]),t._v(" TIME-WAIT")]),t._v(" "),a("p",[t._v("在握手和挥手的不同阶段，客户端和服务端都处于不同的状态。")]),t._v(" "),a("p",[t._v("在第四次挥手后，客户端会进入 "),a("strong",[t._v("TIME-WAIT")]),t._v("状态。该状态会持续 2MSL（最大段生存期，指报文段在网络中生存的时间，超时会被抛弃） 时间，若该时间段内没有 B 的重发请求的话，就进入 "),a("strong",[t._v("CLOSED")]),t._v(" 状态")]),t._v(" "),a("p",[t._v("如果没有"),a("strong",[t._v("TIME-WAIT")]),t._v("状态，若报文因为网络问题没有送达，则服务端不会正常关闭。")]),t._v(" "),a("h5",{attrs:{id:"udp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#udp"}},[t._v("#")]),t._v(" UDP")]),t._v(" "),a("p",[t._v("TCP是面向连接的传输层协议，而UDP是面向无连接的传输层协议。")]),t._v(" "),a("p",[t._v("TCP通过三次握手/四次挥手来保障传输，不过因此速度比UDP慢。")]),t._v(" "),a("p",[t._v("UDP通常用于DNS，或者是一些直播流的传输。")]),t._v(" "),a("h3",{attrs:{id:"http缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[t._v("#")]),t._v(" HTTP缓存")]),t._v(" "),a("h5",{attrs:{id:"http缓存分为强制缓存和协商缓存。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http缓存分为强制缓存和协商缓存。"}},[t._v("#")]),t._v(" HTTP缓存分为强制缓存和协商缓存。")]),t._v(" "),a("p",[t._v("浏览器请求资源时")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("先判断浏览器有没有缓存，若没缓存则向服务器请求资源")])]),t._v(" "),a("li",[a("p",[t._v("若有缓存，根据Cache-Control: max-age 或是 Expires 判断资源是否过期。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果资源没过期，则直接从缓存读取（强制缓存），此时在Network一栏可以看到资源对应的状态码为"),a("strong",[t._v("200（from disk cache）或者是 200 （from memory cache）")])]),t._v(" "),a("p",[t._v("比如，资源没过期的时候我们打开新的页面，资源会从硬盘缓存中读取（from disk cache）；如果我们此时又刷新页面，资源会从内存缓存中读取（from memory cache）")])]),t._v(" "),a("li",[a("p",[t._v("如果资源过期了")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("查看上次资源的响应是否有Etag头部， 有的话发送请求，请求头为If-None-Match")])]),t._v(" "),a("li",[a("p",[t._v("没有Etag的话，看上次资源的响应是否有Last-Modified，有的话发送请求，请求头为If-Modified-Since。")])]),t._v(" "),a("li",[a("p",[t._v("如果命中了缓存，或者说资源没有发生改变，服务器会发送状态码为**304（Not Modify）**的响应，告诉浏览器读取缓存中的资源。")]),t._v(" "),a("p",[t._v("如果未命中缓存，或者说资源发生了改变，服务器会发送状态码为**200（OK）**的响应，并把资源作为响应的内容发送给浏览器。")])])])])])])]),t._v(" "),a("h6",{attrs:{id:"实现强制缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现强制缓存"}},[t._v("#")]),t._v(" 实现强制缓存")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Koa "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"koa"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Koa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bluebird "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bluebird'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bluebird"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("promisifyAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dist/index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/html'")]),t._v("\n        ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/image.png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dist/image.png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cache-Control'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'max-age=10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'image/png'")]),t._v("\n        ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h6",{attrs:{id:"实现协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现协商缓存"}},[t._v("#")]),t._v(" 实现协商缓存")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" getEtag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'etag'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dist/index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/html'")]),t._v("\n        ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/image.png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dist/image.png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEtag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" etag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'If-None-Match'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("etag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" etag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v("\n            ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("etag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ETag'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'image/png'")]),t._v("\n            ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"输入url之后会发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入url之后会发生什么"}},[t._v("#")]),t._v(" 输入URL之后会发生什么")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("浏览器解析URL获取协议，域名，端口，路径")])]),t._v(" "),a("li",[a("p",[t._v("查看浏览器是否有资源的缓存")]),t._v(" "),a("ol",[a("li",[t._v("有。判断是否过期\n"),a("ol",[a("li",[t._v("没过期。直接读取缓存")]),t._v(" "),a("li",[t._v("过期。\n"),a("ol",[a("li",[t._v("Etag和If-None-Match")]),t._v(" "),a("li",[t._v("Last-Modify和lf-Modified-Since")]),t._v(" "),a("li",[t._v("文件修改了则把新资源发给浏览器（状态码200），没修改则告诉浏览器读取缓存（状态码304）")])])])])]),t._v(" "),a("li",[t._v("没有则进行下一步")])])]),t._v(" "),a("li",[a("p",[t._v("首先进行DNS解析")]),t._v(" "),a("ol",[a("li",[t._v("寻找浏览器是否存在缓存，若没有")]),t._v(" "),a("li",[t._v("寻找操作系统是否存在缓存，若没有")]),t._v(" "),a("li",[t._v("寻找hosts文件中是否有域名和ip的对应关系，若没有")]),t._v(" "),a("li",[t._v("查找路由器中是否有缓存")]),t._v(" "),a("li",[t._v("寻找DNS服务器是否没缓存，若没有")]),t._v(" "),a("li",[t._v("向根域名服务器发送请求")])])]),t._v(" "),a("li",[a("p",[t._v("生成HTTP请求")])]),t._v(" "),a("li",[a("p",[t._v("建立TCP连接，三次握手")]),t._v(" "),a("ol",[a("li",[t._v("客户端发送一个SYN=1,Seq=X的TCP包")]),t._v(" "),a("li",[t._v("服务端发回一个SYN=1,ACK=X+1，Seq=Y的TCP包")]),t._v(" "),a("li",[t._v("客户端发送ACK=Y+1，Seq=Y + 1的TCP包")])])]),t._v(" "),a("li",[a("p",[t._v("如果是HTTP请求")]),t._v(" "),a("p",[t._v("对HTTP报文进行报文分割并标记序号和端口号")])]),t._v(" "),a("li",[a("p",[t._v("如果是HTTPS请求")]),t._v(" "),a("ol",[a("li",[t._v("将HTTP报文交给TLS处理，TLS和服务端进行TLS握手，交换版本信息，加密算法，压缩算法，随机数（浏览器一个，客户端一个）。")]),t._v(" "),a("li",[t._v("服务端发送证书，浏览器用CA的公钥对其进行验证。")]),t._v(" "),a("li",[t._v("浏览器用服务端的公钥加密生成的预备主密码发送给服务端，两个随机数和预备主密码生成主密码")]),t._v(" "),a("li",[t._v("使用主密码生成对称加密的密钥对，消息认证码的密钥对，对称加密的CBC分组（分组模式）需要的初始化向量密钥对。")]),t._v(" "),a("li",[t._v("握手之后进行加密，对HTTP报文分组，分组后压缩，压缩后的数据和MAC一起加密。")]),t._v(" "),a("li",[t._v("对称加密保障私密性，消息认证码保障完整性，数字证书保障认证，防止中间人攻击。")])])]),t._v(" "),a("li",[a("p",[t._v("对TCP报文打包，加入源IP地址和目标IP地址。")])]),t._v(" "),a("li",[a("p",[t._v("根据目标IP地址和路由表，查询下一跳路由。使用ARP查询下一跳路由的MAC地址。")])]),t._v(" "),a("li",[a("p",[t._v("对IP报文打包并附上MAC地址。")])]),t._v(" "),a("li",[a("p",[t._v("发送数据，服务端接收到请求并返回响应。")])]),t._v(" "),a("li",[a("p",[t._v("浏览器接收到HTTP响应，关闭TCP连接或保持复用，四次挥手。")])]),t._v(" "),a("li",[a("p",[t._v("（如果返回了HTML）根据响应头的字符集进行解码")])]),t._v(" "),a("li",[a("p",[t._v("如果响应头没有字符集，则浏览器会默认用一套解码规则，当解析html解析到meta标签中的编码规则时，则替换成新的解码方式重新解码。")])]),t._v(" "),a("li",[a("p",[t._v("资源预解析，会将一些请求资源提前加入请求队列中")])]),t._v(" "),a("li",[a("p",[t._v("解析HTML为DOM树")]),t._v(" "),a("ol",[a("li",[t._v("标记化（tokenizing）: 将HTML解析成标记")]),t._v(" "),a("li",[t._v("构建树（tree construction）: 根据标记生成DOM树")])])]),t._v(" "),a("li",[a("p",[t._v("解析CSS为CSSOM")])]),t._v(" "),a("li",[a("p",[t._v("根据DOM树和CSSOM生成DOM渲染树")]),t._v(" "),a("p",[t._v("从DOM的根节点遍历所有可见节点，对其应用对应的CSSOM规则。不可见节点包括（script, meta标签， 被css隐藏的节点）")])]),t._v(" "),a("li",[a("p",[t._v("布局：浏览器获取每个渲染对象的位置和尺寸")])]),t._v(" "),a("li",[a("p",[t._v("绘制：将计算好的像素绘制到屏幕")])]),t._v(" "),a("li",[a("p",[t._v("渲染层/合成层合并")])])]),t._v(" "),a("h3",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[t._v("#")]),t._v(" DNS")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.sunhao.win/articles/netwrok-dns.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关链接"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("DNS查询过程")]),t._v(" "),a("ol",[a("li",[t._v("浏览器是否有缓存")]),t._v(" "),a("li",[t._v("操作系统是否有缓存")]),t._v(" "),a("li",[t._v("本地Hosts文件是否有缓存")]),t._v(" "),a("li",[t._v("本地DNS服务器是否有缓存")]),t._v(" "),a("li",[t._v("向根域名服务器查询，若知道对应IP则返回IP，不知道则告诉本地DNS服务器要去哪个顶级域名服务器查询")]),t._v(" "),a("li",[t._v("迭代，直到找到对应的ip")])]),t._v(" "),a("p",[a("strong",[t._v("递归")])]),t._v(" "),a("p",[t._v("本地 <=> 本地DNS服务器 <=> 权威DNS服务器")]),t._v(" "),a("p",[a("strong",[t._v("迭代")])]),t._v(" "),a("p",[t._v("本地DNS服务器  <=> 根域名服务器，若查不到则进行下一步")]),t._v(" "),a("p",[t._v("​                             <=> 顶级域名服务器，若查不到则进行下一步")]),t._v(" "),a("p",[t._v("​                             <=> 二级域名服务器...")]),t._v(" "),a("p",[a("strong",[t._v("解析记录")])]),t._v(" "),a("ol",[a("li",[t._v("A记录，解析域名到IP")]),t._v(" "),a("li",[t._v("CNAME记录，解析域名到域名")]),t._v(" "),a("li",[t._v("其他各种记录")])]),t._v(" "),a("h3",{attrs:{id:"cdn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn"}},[t._v("#")]),t._v(" CDN")]),t._v(" "),a("p",[t._v("CDN（Content Delivery Network，内容分发网络）是构建在现有互联网基础之上的一层智能虚拟网络，通过在网络各处部署节点服务器，实现将源站内容分发至所有CDN节点，使用户可以就近获得所需的内容。CDN服务缩短了用户查看内容的访问延迟，提高了用户访问网站的响应速度与网站的可用性，解决了网络带宽小、用户访问量大、网点分布不均等问题。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://fecommunity.github.io/front-end-interview/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/8.CDN.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("加速原理"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("当用户访问使用CDN服务的网站时，本地DNS服务器通过CNAME方式将最终域名请求重定向到CDN服务。CDN通过一组预先定义好的策略(如内容类型、地理区域、网络负载状况等)，将当时能够最快响应用户的CDN节点IP地址提供给用户，使用户可以以最快的速度获得网站内容")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://fecommunity.github.io/front-end-interview/img/cdncache.png",alt:"CDN流程图"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);